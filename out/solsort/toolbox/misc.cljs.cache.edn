;; Analyzed by ClojureScript 1.8.51
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name solsort.toolbox.misc, :imports nil, :requires {cljs.core.async.impl.channels cljs.core.async.impl.channels, cljs.core.async cljs.core.async, string clojure.string, clojure.string clojure.string, goog.net.Jsonp goog.net.Jsonp, goog.net.XhrIo goog.net.XhrIo, reagent reagent.core, reagent.core reagent.core}, :uses {timeout cljs.core.async, <! cljs.core.async, join clojure.string, close! cljs.core.async, chan cljs.core.async, pipe cljs.core.async, >! cljs.core.async, split clojure.string, ManyToManyChannel cljs.core.async.impl.channels, put! cljs.core.async, take! cljs.core.async}, :defs {hex-color {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 172, :column 7, :end-line 172, :end-column 16, :arglists (quote ([n]))}, :name solsort.toolbox.misc/hex-color, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, by-first {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 105, :column 7, :end-line 105, :end-column 15, :arglists (quote ([xf]))}, :name solsort.toolbox.misc/by-first, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 15, :method-params ([xf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xf]))}, throw-error {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([e])), :doc "throw e if e is an js/Error instance. used by the <? macro"}, :name solsort.toolbox.misc/throw-error, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :doc "throw e if e is an js/Error instance. used by the <? macro"}, group-lines-by-first {:name solsort.toolbox.misc/group-lines-by-first, :file "util/src/solsort/toolbox/misc.cljs", :line 149, :column 1, :end-line 149, :end-column 26, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 149, :column 6, :end-line 149, :end-column 26}}, parse-json-or-nil {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 76, :column 7, :end-line 76, :end-column 24, :arglists (quote ([str]))}, :name solsort.toolbox.misc/parse-json-or-nil, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 24, :method-params ([str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([str]))}, chan? {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 87, :column 7, :end-line 87, :end-column 12, :arglists (quote ([c]))}, :name solsort.toolbox.misc/chan?, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, next-tick {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([f]))}, :name solsort.toolbox.misc/next-tick, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, starts-with {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 67, :column 7, :end-line 67, :end-column 18, :arglists (quote ([string prefix]))}, :name solsort.toolbox.misc/starts-with, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 18, :method-params ([string prefix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string prefix]))}, <seq<! {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 90, :column 7, :end-line 90, :end-column 13, :arglists (quote ([cs]))}, :name solsort.toolbox.misc/<seq<!, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 13, :method-params ([cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cs]))}, print-channel {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 99, :column 7, :end-line 99, :end-column 20, :arglists (quote ([c]))}, :name solsort.toolbox.misc/print-channel, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 20, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, async-err {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([e])), :doc "wrap in an js/Error object, if not already an error"}, :name solsort.toolbox.misc/async-err, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :doc "wrap in an js/Error object, if not already an error"}, parse-path {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 155, :column 7, :end-line 155, :end-column 17, :arglists (quote ([path]))}, :name solsort.toolbox.misc/parse-path, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 17, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, swap-trim {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 169, :column 7, :end-line 169, :end-column 16, :arglists (quote ([[a b]]))}, :name solsort.toolbox.misc/swap-trim, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([p__49395]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[a b]]))}, <blob-text {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([blob]))}, :name solsort.toolbox.misc/<blob-text, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 17, :method-params ([blob]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([blob]))}, put!close! {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 26, :column 7, :end-line 26, :end-column 17, :arglists (quote ([c d]))}, :name solsort.toolbox.misc/put!close!, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 17, :method-params ([c d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c d]))}, jsextend {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 81, :column 7, :end-line 81, :end-column 15, :arglists (quote ([target source]))}, :name solsort.toolbox.misc/jsextend, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 15, :method-params ([target source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([target source]))}, function? {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 88, :column 7, :end-line 88, :end-column 16, :arglists (quote ([c]))}, :name solsort.toolbox.misc/function?, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, <blob-url {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 48, :column 7, :end-line 48, :end-column 16, :arglists (quote ([blob]))}, :name solsort.toolbox.misc/<blob-url, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([blob]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([blob]))}, <n {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 36, :column 7, :end-line 36, :end-column 9, :arglists (quote ([f & args])), :doc "Convert a javascript node-style async to core.async channel", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name solsort.toolbox.misc/<n, :variadic true, :file "util/src/solsort/toolbox/misc.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists ([f & args]), :doc "Convert a javascript node-style async to core.async channel"}, canonize-string {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 157, :column 7, :end-line 157, :end-column 22, :arglists (quote ([s]))}, :name solsort.toolbox.misc/canonize-string, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 22, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, transducer-status {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 122, :column 7, :end-line 122, :end-column 24, :arglists (quote ([& s])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(s)], :arglists ([& s]), :arglists-meta (nil)}}, :name solsort.toolbox.misc/transducer-status, :variadic true, :file "util/src/solsort/toolbox/misc.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(s)], :arglists ([& s]), :arglists-meta (nil)}, :method-params [(s)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 0, :fn-var true, :arglists ([& s])}, run-once {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 69, :column 7, :end-line 69, :end-column 15, :arglists (quote ([f]))}, :name solsort.toolbox.misc/run-once, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, -unique-id-counter {:name solsort.toolbox.misc/-unique-id-counter, :file "util/src/solsort/toolbox/misc.cljs", :line 175, :column 1, :end-line 175, :end-column 24, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 175, :column 6, :end-line 175, :end-column 24}}, hex-byte {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([i]))}, :name solsort.toolbox.misc/hex-byte, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 15, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i]))}, js-seq {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 66, :column 7, :end-line 66, :end-column 13, :arglists (quote ([o]))}, :name solsort.toolbox.misc/js-seq, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 13, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, <p {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 27, :column 7, :end-line 27, :end-column 9, :arglists (quote ([p])), :doc "Convert a javascript promise to a core.async channel"}, :name solsort.toolbox.misc/<p, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 9, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Convert a javascript promise to a core.async channel"}, unatom {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 25, :column 7, :end-line 25, :end-column 13, :arglists (quote ([o]))}, :name solsort.toolbox.misc/unatom, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 13, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, unique-id {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 176, :column 7, :end-line 176, :end-column 16, :arglists (quote ([]))}, :name solsort.toolbox.misc/unique-id, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, transducer-accumulate {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 137, :column 7, :end-line 137, :end-column 28, :arglists (quote ([initial]))}, :name solsort.toolbox.misc/transducer-accumulate, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 28, :method-params ([initial]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([initial]))}, throttle {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/misc.cljs", :line 178, :column 7, :end-line 178, :end-column 15, :arglists (quote ([f t])), :doc "Limit how often a function (without arguments) is called"}, :name solsort.toolbox.misc/throttle, :variadic false, :file "util/src/solsort/toolbox/misc.cljs", :end-column 15, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t])), :doc "Limit how often a function (without arguments) is called"}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, s clojure.set, clojure.set clojure.set, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:else done :recur}, :order [:recur :else done]}, :doc nil}