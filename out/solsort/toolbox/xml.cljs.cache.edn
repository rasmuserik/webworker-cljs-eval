;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name solsort.toolbox.xml, :imports nil, :requires {solsort.toolbox.misc solsort.toolbox.misc, string clojure.string, clojure.string clojure.string}, :uses {js-seq solsort.toolbox.misc, blank? clojure.string}, :defs {name->kw {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([o]))}, :name solsort.toolbox.xml/name->kw, :variadic false, :file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :end-column 15, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, dom->clj {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :line 8, :column 7, :end-line 8, :end-column 15, :arglists (quote ([dom]))}, :name solsort.toolbox.xml/dom->clj, :variadic false, :file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :end-column 15, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, xml-find {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :line 25, :column 7, :end-line 25, :end-column 15, :arglists (quote ([p xml]))}, :name solsort.toolbox.xml/xml-find, :variadic false, :file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :end-column 15, :method-params ([p xml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p xml]))}, xml-find-child {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :line 27, :column 7, :end-line 27, :end-column 21, :arglists (quote ([p xml]))}, :name solsort.toolbox.xml/xml-find-child, :variadic false, :file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :end-column 21, :method-params ([p xml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p xml]))}, xml->sxml {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :line 28, :column 7, :end-line 28, :end-column 16, :arglists (quote ([xml]))}, :name solsort.toolbox.xml/xml->sxml, :variadic false, :file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/xml.cljs", :end-column 16, :method-params ([xml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xml]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:children dom :else :attrs :tag .-TEXT_NODE}, :order [:tag :attrs :children .-TEXT_NODE dom :else]}, :doc nil}