;; Analyzed by ClojureScript 1.8.51
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros}, :excludes #{}, :name solsort.toolbox.net, :imports nil, :requires {goog.net.XhrIo goog.net.XhrIo, string clojure.string, clojure.string clojure.string, solsort.toolbox.misc solsort.toolbox.misc, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, async-err solsort.toolbox.misc, >! cljs.core.async, <p solsort.toolbox.misc, put! cljs.core.async, take! cljs.core.async}, :defs {utf8-str->buf {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 25, :column 7, :end-line 25, :end-column 20, :arglists (quote ([s]))}, :name solsort.toolbox.net/utf8-str->buf, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, utf16->utf8 {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([s]))}, :name solsort.toolbox.net/utf16->utf8, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, browser-crypto {:name solsort.toolbox.net/browser-crypto, :file "util/src/solsort/toolbox/net.cljs", :line 28, :column 1, :end-line 28, :end-column 20, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 28, :column 6, :end-line 28, :end-column 20}}, <sha256 {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 29, :column 7, :end-line 29, :end-column 14, :arglists (quote ([buffer]))}, :name solsort.toolbox.net/<sha256, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 14, :method-params ([buffer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([buffer]))}, str->buf {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([s]))}, :name solsort.toolbox.net/str->buf, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, buf->str {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 24, :column 7, :end-line 24, :end-column 15, :arglists (quote ([a]))}, :name solsort.toolbox.net/buf->str, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 15, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, <ajax {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 47, :column 7, :end-line 47, :end-column 12, :arglists (quote ([url & {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}})], :arglists ([url & {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}}]), :arglists-meta (nil)}}, :name solsort.toolbox.net/<ajax, :variadic true, :file "util/src/solsort/toolbox/net.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}})], :arglists ([url & {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}}]), :arglists-meta (nil)}, :method-params [(url {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists ([url & {:keys [method data headers timeout credentials result], :or {method "GET", data nil, headers #object[cljs.tagged_literals.JSValue 0x3d976f2b "cljs.tagged_literals.JSValue@3d976f2b"], timeout 0, credentials true, result "js->clj"}}])}, <load-js {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 10, :column 7, :end-line 10, :end-column 15, :arglists (quote ([url])), :doc "Load a JavaScript file, and emit true on returned channel when done"}, :name solsort.toolbox.net/<load-js, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 15, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "Load a JavaScript file, and emit true on returned channel when done"}, buf->utf8-str {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 23, :column 7, :end-line 23, :end-column 20, :arglists (quote ([a]))}, :name solsort.toolbox.net/buf->utf8-str, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 20, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, utf8->utf16 {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 22, :column 7, :end-line 22, :end-column 18, :arglists (quote ([s]))}, :name solsort.toolbox.net/utf8->utf16, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, <sha256-str {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/net.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([s]))}, :name solsort.toolbox.net/<sha256-str, :variadic false, :file "util/src/solsort/toolbox/net.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :credentials :method :recur :headers :result :timeout :data}, :order [:recur :else :method :data :headers :timeout :credentials :result]}, :doc nil}