;; Analyzed by ClojureScript 1.8.51
{:use-macros {reaction reagent.ratom, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name solsort.toolbox.style, :imports nil, :requires {cljs.core.async.impl.channels cljs.core.async.impl.channels, cljs.core.async cljs.core.async, string clojure.string, clojure.string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, join clojure.string, close! cljs.core.async, chan cljs.core.async, pipe cljs.core.async, >! cljs.core.async, split clojure.string, ManyToManyChannel cljs.core.async.impl.channels, put! cljs.core.async, take! cljs.core.async}, :defs {normalize-css {:name solsort.toolbox.style/normalize-css, :file "util/src/solsort/toolbox/style.cljs", :line 15, :column 1, :end-line 15, :end-column 19, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 15, :column 6, :end-line 15, :end-column 19}}, grid {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 45, :column 7, :end-line 45, :end-column 11, :arglists (quote ([]))}, :name solsort.toolbox.style/grid, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, css-name {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 108, :column 7, :end-line 108, :end-column 15, :arglists (quote ([id]))}, :name solsort.toolbox.style/css-name, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 15, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, handle-rule {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 112, :column 7, :end-line 112, :end-column 18, :arglists (quote ([[k v]]))}, :name solsort.toolbox.style/handle-rule, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 18, :method-params ([p__50820]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[k v]]))}, handle-block {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 117, :column 7, :end-line 117, :end-column 19, :arglists (quote ([[id rules]]))}, :name solsort.toolbox.style/handle-block, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 19, :method-params ([p__50823]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[id rules]]))}, clj->css {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 119, :column 7, :end-line 119, :end-column 15, :arglists (quote ([o]))}, :name solsort.toolbox.style/clj->css, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 15, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, js->css {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 121, :column 7, :end-line 121, :end-column 14, :arglists (quote ([o]))}, :name solsort.toolbox.style/js->css, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 14, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, load-style! {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 133, :column 7, :end-line 133, :end-column 18, :arglists (quote ([s id]))}, :name solsort.toolbox.style/load-style!, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 18, :method-params ([s id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s id]))}, style-tag {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/util/src/solsort/toolbox/style.cljs", :line 141, :column 7, :end-line 141, :end-column 16, :arglists (quote ([o]))}, :name solsort.toolbox.style/style-tag, :variadic false, :file "util/src/solsort/toolbox/style.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}}, :require-macros {ratom reagent.ratom, reagent.ratom reagent.ratom, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:box-sizing :vertical-align :borderRadius :.inline-block :else :.scol :.left :float :width :.ccc :background :.noclear :src :max-width :padding-right :style :.container :div :fontFamily :.scontain :padding-left :padding :fontWeight :display :.hidden :border :.button :.right :clear :margin}, :order [:fontFamily :fontWeight :src :.inline-block :display :.container :margin :.ccc :background :.button :padding :borderRadius :border :.hidden :.noclear :clear :.right :float :.left :.scontain :width :max-width :.scol :padding-left :vertical-align :padding-right :box-sizing :div :else :style]}, :doc nil}