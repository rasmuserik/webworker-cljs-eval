;; Analyzed by ClojureScript 1.8.51
{:use-macros {reaction reagent.ratom, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name solsort.webworker-cljs-eval.webworker-cljs-eval, :imports nil, :requires {reagent reagent.core, solsort.toolbox.ui solsort.toolbox.ui, solsort.util solsort.util, reagent.core reagent.core, cljs.js cljs.js, cljs.core.async cljs.core.async, solsort.toolbox.setup solsort.toolbox.setup, solsort.toolbox.appdb solsort.toolbox.appdb, string clojure.string, clojure.string clojure.string, cljs.reader cljs.reader}, :uses {input solsort.toolbox.ui, timeout cljs.core.async, log solsort.util, <! cljs.core.async, parse-json-or-nil solsort.util, close! cljs.core.async, select solsort.toolbox.ui, page-ready solsort.util, chan cljs.core.async, <seq<! solsort.util, replace clojure.string, db solsort.toolbox.appdb, dom->clj solsort.util, put!close! solsort.util, pipe cljs.core.async, db! solsort.toolbox.appdb, load-style! solsort.util, db-async! solsort.toolbox.appdb, <ajax solsort.util, >! cljs.core.async, split clojure.string, render solsort.util, js-seq solsort.util, <p solsort.util, put! cljs.core.async, take! cljs.core.async, blank? clojure.string}, :defs {<compile {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 84, :column 7, :end-line 84, :end-column 15, :arglists (quote ([]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/<compile, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-ping {:name solsort.webworker-cljs-eval.webworker-cljs-eval/start-ping, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 102, :column 1, :end-line 102, :end-column 20, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 102, :column 10, :end-line 102, :end-column 20}}, workers {:name solsort.webworker-cljs-eval.webworker-cljs-eval/workers, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 23, :column 1, :end-line 23, :end-column 17, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 23, :column 10, :end-line 23, :end-column 17}}, ping {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 95, :column 7, :end-line 95, :end-column 11, :arglists (quote ([id]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/ping, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 11, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, kill-worker {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 47, :column 7, :end-line 47, :end-column 18, :arglists (quote ([id]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/kill-worker, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 18, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, message-handler {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([message]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/message-handler, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 22, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, compiler-state {:name solsort.webworker-cljs-eval.webworker-cljs-eval/compiler-state, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 83, :column 1, :end-line 83, :end-column 24, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 83, :column 10, :end-line 83, :end-column 24}}, app {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 119, :column 7, :end-line 119, :end-column 10, :arglists (quote ([]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/app, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, new-worker {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/new-worker, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, worker-list {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 105, :column 7, :end-line 105, :end-column 18, :arglists (quote ([]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/worker-list, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pinger {:protocol-inline nil, :meta {:file "/home/rasmuserik/webworker-cljs-eval/src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :line 99, :column 7, :end-line 99, :end-column 13, :arglists (quote ([]))}, :name solsort.webworker-cljs-eval.webworker-cljs-eval/pinger, :variadic false, :file "src/solsort/webworker_cljs_eval/webworker_cljs_eval.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, ratom reagent.ratom, reagent.ratom reagent.ratom, cljs.js cljs.js, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:inline-block :ping :path :pong :js :text-align :pre :else :button :db load-fn-result :value :width :recur :type :source :absolute :on-click :running :style :textarea :lang :div :id :code :compiled-code :right :display :position load-fn :fixed :h3 :clj :p :workers :height :left}, :order [:workers :pong :id :running :code load-fn :clj :recur :path load-fn-result :type :lang :source :js :else :compiled-code :value :ping :div :h3 :p :button :on-click :db :style :text-align :display :width :position :height :left :inline-block :fixed :textarea :right :absolute :pre]}, :doc nil}